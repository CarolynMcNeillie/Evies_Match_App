{"version":3,"sources":["common/components/Alert/Alert.module.scss","common/components/Card/Card.module.scss","core/Board.module.scss","common/components/Button/Button.module.scss","common/components/Alert/Alert.js","common/components/Button/Button.js","common/components/Card/Card.js","common/utils/doubleArray.js","common/utils/flipCard.js","common/utils/shuffleArray.js","common/utils/getShuffledCards.js","core/Board.js","core/Routes.js","index.js","core/App.js"],"names":["module","exports","Alert","isVisible","children","alertClassName","classNames","styles","alert","className","alert__container","defaultProps","Button","onClick","button","Card","card","cardClassName","isFaceUp","card__face","face","doubleArray","arr","concat","flipCard","newCard","shuffleArray","currentIndex","length","temporaryValue","randomIndex","Math","floor","random","cardSet","name","getShuffledCards","numberOfCards","slice","Board","useState","shuffledCards","setShuffledCards","inputTracker","setInputTracker","turnCounter","setTurnCounter","matchCounter","setMatchCounter","isWinner","setIsWinner","isChecking","setIsChecking","totalPairs","handleFlip","key","updatedCards","updatedTracker","undefined","compareArray","setTimeout","newUpdatedCards","forEach","cardIndex","board","map","Routes","exact","path","ReactDOM","render","app","document","getElementById"],"mappings":"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","file":"static/js/main.d40b4f32.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alert\":\"Alert_alert__2dlD-\",\"winner\":\"Alert_winner__2_e47\",\"alert__container\":\"Alert_alert__container__3P3pr\",\"alert--isVisible\":\"Alert_alert--isVisible__1FIBH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"Card_card__3I9LM\",\"card__face\":\"Card_card__face__1Omms\",\"card--face-up\":\"Card_card--face-up__3kyG_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"board\":\"Board_board__1XdY9\",\"board__cards--container\":\"Board_board__cards--container__lwuDq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__1PA_U\"};","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport styles from \"./Alert.module.scss\";\n\nexport const Alert = ({ isVisible, children }) => {\n  const alertClassName = classNames(styles.alert, {\n    [styles[\"alert--isVisible\"]]: isVisible\n  });\n\n  return (\n    <aside className={alertClassName}>\n      {isVisible ? (\n        <div className={styles.alert__container}>{children}</div>\n      ) : null}\n    </aside>\n  );\n};\n\nAlert.propTypes = {\n  isVisible: PropTypes.bool.isRequired\n};\n\nAlert.defaultProps = {\n  isVisible: false\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport styles from \"./Button.module.scss\";\n\nexport const Button = ({ onClick, children }) => {\n  return (\n    <button onClick={onClick} className={styles.button}>\n      {children}\n    </button>\n  );\n};\n\nButton.propTypes = {\n  onClick: PropTypes.func.isRequired,\n  children: PropTypes.string.isRequired\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classNames from \"classnames\";\n\nimport styles from \"./Card.module.scss\";\n\nexport const Card = ({ card, onClick, children }) => {\n  const cardClassName = classNames(styles.card, {\n    [styles[\"card--face-up\"]]: card.isFaceUp\n  });\n\n  return (\n    <article className={cardClassName} onClick={onClick}>\n      <span className={styles.card__face}>{card.face}</span>\n    </article>\n  );\n};\n\nCard.propTypes = {\n  card: PropTypes.object.isRequired,\n  isFaceUp: PropTypes.bool\n};\n\nCard.defaultProps = {\n  isFaceUp: false\n};\n","export const doubleArray = arr => {\n  return arr.concat(arr);\n};\n","export const flipCard = (card, isFaceUp = !card.isFaceUp) => {\n  const newCard = {\n    ...card,\n    isFaceUp\n  };\n  return newCard;\n};\n","//https://stackoverflow.com/questions/2450954/how-to-randomize-shuffle-a-javascript-array\nexport const shuffleArray = arr => {\n  let currentIndex = arr.length;\n  let temporaryValue = 0;\n  let randomIndex = 0;\n\n  while (0 !== currentIndex) {\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    temporaryValue = arr[currentIndex];\n    arr[currentIndex] = arr[randomIndex];\n    arr[randomIndex] = temporaryValue;\n  }\n\n  return arr;\n};\n","import {\n  shuffleArray,\n  doubleArray\n} from \"common/utils\";\n\nconst cardSet = [{\n    name: \"tongue\",\n    face: \"😛\",\n    isFaceUp: false\n  },\n  {\n    name: \"robot\",\n    face: \"🤖\",\n    isFaceUp: false\n  },\n  {\n    name: \"heart\",\n    face: \"❤️\",\n    isFaceUp: false\n  },\n  {\n    name: \"family\",\n    face: \"👨‍👩‍👧\",\n    isFaceUp: false\n  },\n  {\n    name: \"taco\",\n    face: \"🌮\",\n    isFaceUp: false\n  },\n  {\n    name: \"bus\",\n    face: \"🚌\",\n    isFaceUp: false\n  },\n  {\n    name: \"apple\",\n    face: \"🍎\",\n    isFaceUp: false\n  },\n  {\n    name: \"flower\",\n    face: \"🌸\",\n    isFaceUp: false\n  },\n  {\n    name: \"airplane\",\n    face: \"✈️\",\n    isFaceUp: false\n  },\n  {\n    name: \"fairy\",\n    face: \"🧚🏼‍♂️\",\n    isFaceUp: false\n  },\n  {\n    name: \"bear\",\n    face: \"🐻\",\n    isFaceUp: false\n  },\n  {\n    name: \"baby\",\n    face: \"👶🏼\",\n    isFaceUp: false\n  },\n  {\n    name: \"dog\",\n    face: \"🐶\",\n    isFaceUp: false\n  },\n  {\n    name: \"sheep\",\n    face: \"🐑\",\n    isFaceUp: false\n  },\n  {\n    name: \"icecream\",\n    face: \"🍦\",\n    isFaceUp: false\n  }, {\n    name: \"crayon\",\n    face: \"🖍\",\n    isFaceUp: false\n  }, {\n    name: \"butterfly\",\n    face: \"🦋\",\n    isFaceUp: false\n  }\n];\n\nexport const getShuffledCards = (numberOfCards = 5) =>\n  shuffleArray(doubleArray(shuffleArray(cardSet).slice(0, numberOfCards)));\n","import React, { useState } from \"react\";\n\nimport { Alert, Button, Card } from \"common\";\n\nimport { flipCard, getShuffledCards } from \"common/utils\";\n\nimport styles from \"./Board.module.scss\";\n\nexport const Board = () => {\n  const [shuffledCards, setShuffledCards] = useState(getShuffledCards(6));\n  const [inputTracker, setInputTracker] = useState([]);\n  const [turnCounter, setTurnCounter] = useState(0);\n  const [matchCounter, setMatchCounter] = useState(0);\n  const [isWinner, setIsWinner] = useState(false);\n  const [isChecking, setIsChecking] = useState(false);\n\n  const totalPairs = shuffledCards.length / 2;\n\n  const dealCards = () => {\n    setShuffledCards(getShuffledCards(6));\n    setInputTracker([]);\n    setTurnCounter(0);\n    setMatchCounter(0);\n    setIsWinner(false);\n  };\n\n  const compareCards = compareArray => {\n    const firstCard = shuffledCards[compareArray[0]].name;\n    const secondCard = shuffledCards[compareArray[1]].name;\n\n    if (firstCard === secondCard) {\n      if (totalPairs === matchCounter + 1) {\n        setIsWinner(true);\n      }\n      setMatchCounter(matchCounter + 1);\n      setIsChecking(false);\n    } else {\n      setTimeout(() => {\n        const newUpdatedCards = [...shuffledCards];\n        compareArray.forEach(cardIndex => {\n          newUpdatedCards[cardIndex] = flipCard(\n            newUpdatedCards[cardIndex],\n            false\n          );\n        });\n        setShuffledCards(newUpdatedCards);\n        setIsChecking(false);\n      }, 1000);\n    }\n  };\n\n  const handleFlip = (key, card) => {\n    if (!card.isFaceUp && !isChecking) {\n      const updatedCards = [...shuffledCards];\n      const updatedTracker = [...inputTracker];\n      updatedCards[key] = flipCard(card);\n      setShuffledCards(updatedCards);\n      if (inputTracker[turnCounter] === undefined) {\n        updatedTracker[turnCounter] = [key];\n      } else {\n        updatedTracker[turnCounter][1] = key;\n        setIsChecking(true);\n        setTurnCounter(turnCounter + 1);\n        compareCards(updatedTracker[turnCounter]);\n      }\n      setInputTracker(updatedTracker);\n    }\n  };\n\n  return (\n    <div className={styles.board}>\n      <Alert isVisible={isWinner}>\n        <h1> Winner! </h1>\n        <p>\n          It took you <strong> {turnCounter} </strong> tries to find\n          <strong> {matchCounter} </strong> pairs\n        </p>\n        <Button onClick={dealCards}> Play again! </Button>\n      </Alert>\n      {!isWinner ? (\n        <div className={styles[\"board__cards--container\"]}>\n          {shuffledCards.map((card, cardIndex) => (\n            <Card\n              card={card}\n              key={cardIndex}\n              onClick={() => {\n                handleFlip(cardIndex, card);\n              }}\n            />\n          ))}\n        </div>\n      ) : null}\n    </div>\n  );\n};\n","import React from \"react\";\nimport { Switch, Route } from \"react-router-dom\";\n\nimport { Board } from \"./Board\";\n\n// High-level routes for the application\n// Sub-routes should be nested within components\nexport const Routes = () => (\n  <Switch>\n    <Route exact path=\"/\">\n      <p>Hihihihi</p>\n      <Board />\n    </Route>\n  </Switch>\n);\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport 'common/styles/index.scss'\n\nimport { App } from 'core/App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n","import React from 'react'\nimport { BrowserRouter as Router } from 'react-router-dom'\n\nimport styles from './App.module.scss'\nimport { Routes } from './Routes'\n\nexport const App = () => (\n  <Router>\n    <main className={styles.app}>\n      <Routes />\n    </main>\n  </Router>\n)\n"],"sourceRoot":""}